package java8;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@FunctionalInterface
interface Draw {
	void draw(int width);
}

interface Say {
	String say();
}
class Product
{
	int id;  
    String name;  
    float price;  
    public Product(int id, String name, float price) {  
        super();  
        this.id = id;  
        this.name = name;  
        this.price = price;  
    }
	@Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", price=" + price + "]";
	}  
    
    
}
public class LambdaDemo {
	public static void main(String[] args) {
		Draw d1 = (a) -> System.out.println("draw rectangle.width - " + a);
		d1.draw(10);

		Say s1 = () -> {
			return "Hi from lambda...";
		};
		System.out.println(s1.say());
		List<String> list = Arrays.asList("hello","test","hi","to");
		list.forEach(a -> System.out.println(a));
		
		Product p1 = new Product(101, "pulse", 90);
		Product p2 = new Product(102, "rice", 40);
		Product p3 = new Product(103, "aata", 45);
		List<Product> plist = new ArrayList<>();
		plist.add(p1);
		plist.add(p2);
		plist.add(p3);
		
		Collections.sort(plist,(o1,o2)-> o1.name.compareTo(o2.name));
		System.out.println(plist);
		
		plist.stream().filter(a -> a.price < 50).forEach(System.out::println);;
	}

}



















