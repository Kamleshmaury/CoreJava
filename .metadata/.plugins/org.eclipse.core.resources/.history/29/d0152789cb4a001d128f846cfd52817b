package com.hops2;

import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

//class Student4 {
//	public int rollNo;
//	String name;
//	
//	@JsonBackReference
//	List<Book> books;
//
//	public Student4(int rollNo, String name) {
//		super();
//		this.rollNo = rollNo;
//		this.name = name;
//		this.books = new ArrayList<Book>();
//	}
//
//	public void addBook(Book book) {
//		books.add(book);
//	}
//
//	@Override
//	public String toString() {
//		return "Student4 [rollNo=" + rollNo + ", name=" + name + ", books=" + books + "]";
//	}
//
//	
//}
//
//class Book {
//	int id;
//	String name;
//
//	
//
//	public Book(int id, String name, Student4 owner) {
//		super();
//		this.id = id;
//		this.name = name;
//		this.owner = owner;
//	}
//	@JsonManagedReference
//	public Student4 owner;
//
//
//
//	@Override
//	public String toString() {
//		return "Book [id=" + id + ", name=" + name + ", owner=" + owner + "]";
//	}
//	
//	
//}

public class JsonBackAndJsonManageRefrence {
	public static void main(String args[]) throws IOException, ParseException {
	      ObjectMapper mapper = new ObjectMapper();     
	      Student student = new Student(1, "Mark");
	      Book book1 = new Book(1,"Learn HTML", student);
	      Book book2 = new Book(1,"Learn JAVA", student);

	      student.addBook(book1);
	      student.addBook(book2);

	      String jsonString = mapper
	         .writerWithDefaultPrettyPrinter()
	         .writeValueAsString(book1);
	      System.out.println(jsonString);
	   }
	}
	class Student { 
	   public int rollNo;
	   public String name;

	   @JsonBackReference
	   public List<Book> books;

	   Student(int rollNo, String name){
	      this.rollNo = rollNo;
	      this.name = name;
	      this.books = new ArrayList<Book>();
	   }
	   public void addBook(Book book){
	      books.add(book);
	   }
	}
	class Book {
	   public int id;
	   public String name;

	   Book(int id, String name, Student owner) {
	      this.id = id;
	      this.name = name;
	      this.owner = owner;
	   }

	   @JsonManagedReference
	   public Student owner;
	}

}



















